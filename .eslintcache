[{"D:\\Web\\Polina\\blog\\src\\index.js":"1","D:\\Web\\Polina\\blog\\src\\components\\App\\App.jsx":"2","D:\\Web\\Polina\\blog\\src\\components\\ArticlesList\\ArticlesList.jsx":"3","D:\\Web\\Polina\\blog\\src\\components\\Article\\Article.jsx":"4","D:\\Web\\Polina\\blog\\src\\services\\ArticlesService.js":"5","D:\\Web\\Polina\\blog\\src\\containers\\ArticlesListContainer\\ArticlesListContainer.jsx":"6","D:\\Web\\Polina\\blog\\src\\containers\\ArticlePage\\ArticlePage.jsx":"7","D:\\Web\\Polina\\blog\\src\\components\\Header\\Header.jsx":"8","D:\\Web\\Polina\\blog\\src\\components\\SignIn\\SignIn.jsx":"9","D:\\Web\\Polina\\blog\\src\\components\\SignUp\\SignUp.jsx":"10","D:\\Web\\Polina\\blog\\src\\components\\LoggedInUser\\LoggedInUser.jsx":"11","D:\\Web\\Polina\\blog\\src\\components\\UserInfo\\UserInfo.jsx":"12","D:\\Web\\Polina\\blog\\src\\components\\LoggedOutUser\\LoggedOutUser.jsx":"13","D:\\Web\\Polina\\blog\\src\\components\\EditProfile\\EditProfile.jsx":"14","D:\\Web\\Polina\\blog\\src\\components\\FormInput\\FormInput.jsx":"15","D:\\Web\\Polina\\blog\\src\\components\\ErrorIndicator\\ErrorIndicator.jsx":"16","D:\\Web\\Polina\\blog\\src\\store.js":"17","D:\\Web\\Polina\\blog\\src\\reducers\\rootReducer.js":"18","D:\\Web\\Polina\\blog\\src\\reducers\\setUserReducer.js":"19","D:\\Web\\Polina\\blog\\src\\actions\\actions.js":"20"},{"size":313,"mtime":1612273089536,"results":"21","hashOfConfig":"22"},{"size":1079,"mtime":1612261659145,"results":"23","hashOfConfig":"22"},{"size":499,"mtime":1611734407127,"results":"24","hashOfConfig":"22"},{"size":1801,"mtime":1611757704778,"results":"25","hashOfConfig":"22"},{"size":1226,"mtime":1612273034551,"results":"26","hashOfConfig":"22"},{"size":1754,"mtime":1611757704883,"results":"27","hashOfConfig":"22"},{"size":1170,"mtime":1612261879301,"results":"28","hashOfConfig":"22"},{"size":864,"mtime":1612267577365,"results":"29","hashOfConfig":"22"},{"size":1780,"mtime":1612254900585,"results":"30","hashOfConfig":"22"},{"size":3415,"mtime":1612254900628,"results":"31","hashOfConfig":"22"},{"size":493,"mtime":1611846320556,"results":"32","hashOfConfig":"22"},{"size":846,"mtime":1612269092620,"results":"33","hashOfConfig":"22"},{"size":412,"mtime":1611846320572,"results":"34","hashOfConfig":"22"},{"size":2466,"mtime":1612254900484,"results":"35","hashOfConfig":"22"},{"size":776,"mtime":1612186111695,"results":"36","hashOfConfig":"22"},{"size":419,"mtime":1612186111659,"results":"37","hashOfConfig":"22"},{"size":317,"mtime":1612273336154,"results":"38","hashOfConfig":"22"},{"size":196,"mtime":1612271794984,"results":"39","hashOfConfig":"22"},{"size":297,"mtime":1612270866105,"results":"40","hashOfConfig":"22"},{"size":109,"mtime":1612270849007,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n7pgu5",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Web\\Polina\\blog\\src\\index.js",[],"D:\\Web\\Polina\\blog\\src\\components\\App\\App.jsx",[],["86","87","88","89","90"],"D:\\Web\\Polina\\blog\\src\\components\\ArticlesList\\ArticlesList.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\Article\\Article.jsx",[],"D:\\Web\\Polina\\blog\\src\\services\\ArticlesService.js",[],"D:\\Web\\Polina\\blog\\src\\containers\\ArticlesListContainer\\ArticlesListContainer.jsx",[],"D:\\Web\\Polina\\blog\\src\\containers\\ArticlePage\\ArticlePage.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\Header\\Header.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\SignIn\\SignIn.jsx",["91"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\nimport isEmail from 'validator/es/lib/isEmail';\nimport classes from './SignIn.module.scss';\nimport FormInput from '../FormInput/FormInput';\n\nconst SignIn = () => {\n  const { register, handleSubmit, watch, errors } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  const emailSettingsValidation = register({\n    required: 'Email is required',\n    validate: () => isEmail(watch('email')) || 'Invalid email format',\n  });\n\n  const passwordSettingsValidation = register({\n    required: 'Password is required',\n    minLength: { value: 8, message: 'Your password needs to be at least 8 characters.' },\n    maxLength: { value: 40, message: 'Your password needs to be no more than 40 characters long.' },\n  });\n\n  return (\n    <div className={classes.SignIn}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1 className={classes.SignIn__Title}>Sign In</h1>\n        <FormInput\n          ref={emailSettingsValidation}\n          id=\"email\"\n          error={errors.email}\n          label=\"Email Address\"\n          type=\"email\"\n          name=\"email\"\n        />\n\n        <FormInput\n          ref={passwordSettingsValidation}\n          id=\"password\"\n          error={errors.password}\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n        />\n        <Button className={classes.SignIn__Submit} type=\"primary\" htmlType=\"submit\">\n          Login\n        </Button>\n        <p className={classes.SignIn__Question}>\n          Don&apos;t you have an account? <Link to=\"/sign-up\">Sign Up.</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n","D:\\Web\\Polina\\blog\\src\\components\\SignUp\\SignUp.jsx",["92"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Button } from 'antd';\nimport isEmail from 'validator/es/lib/isEmail';\nimport FormInput from '../FormInput/FormInput';\nimport classes from './SignUp.module.scss';\n\nconst SignUp = () => {\n  const { register, handleSubmit, watch, errors } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  const passwordValue = watch('password', '');\n\n  const usernameSettingsValidation = register({\n    required: 'Username is required',\n    minLength: { value: 3, message: 'Your username needs to be at least 3 characters.' },\n    maxLength: { value: 20, message: 'Your username needs to be no more than 20 characters long.' },\n  });\n\n  const emailSettingsValidation = register({\n    required: 'Email is required',\n    validate: () => isEmail(watch('email')) || 'Invalid email format',\n  });\n\n  const passwordSettingsValidation = register({\n    required: 'Password is required',\n    minLength: { value: 8, message: 'Your password needs to be at least 8 characters.' },\n    maxLength: { value: 40, message: 'Your password needs to be no more than 40 characters long.' },\n  });\n\n  const passwordRepeatSettingsValidation = register({\n    required: 'Password is required',\n    validate: (value) => value === passwordValue || 'Passwords must match',\n  });\n\n  const agreementSettingsValidation = register({\n    required: 'Please accept the terms and conditions to continue',\n  });\n\n  return (\n    <div className={classes.SignUp}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1 className={classes.SignUp__Title}>Create new account</h1>\n\n        <FormInput\n          ref={usernameSettingsValidation}\n          id=\"username\"\n          error={errors.username}\n          label=\"Username\"\n          type=\"text\"\n          name=\"username\"\n        />\n\n        <FormInput\n          ref={emailSettingsValidation}\n          id=\"email\"\n          error={errors.email}\n          label=\"Email Address\"\n          type=\"email\"\n          name=\"email\"\n        />\n\n        <FormInput\n          ref={passwordSettingsValidation}\n          id=\"password\"\n          error={errors.password}\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n        />\n\n        <FormInput\n          ref={passwordRepeatSettingsValidation}\n          id=\"passwordRepeat\"\n          error={errors.passwordRepeat}\n          label=\"Repeat Password\"\n          type=\"password\"\n          name=\"passwordRepeat\"\n        />\n\n        <div className={classes.SignUp__Agreement}>\n          <label htmlFor=\"checkbox\" className={classes.SignUp__Label}>\n            <input\n              className={classes.SignUp__Checkbox}\n              id=\"checkbox\"\n              name=\"checkbox\"\n              type=\"checkbox\"\n              ref={agreementSettingsValidation}\n            />\n            I agree to the processing of my personal information\n          </label>\n          {errors.checkbox && <p style={{ margin: 0, color: '#f5222d' }}>{errors.checkbox.message}</p>}\n        </div>\n\n        <Button className={classes.SignUp__Submit} type=\"primary\" htmlType=\"submit\">\n          Create\n        </Button>\n        <p className={classes.SignUp__Question}>\n          Already have an account? <Link to=\"/sign-in\">Sign In.</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","D:\\Web\\Polina\\blog\\src\\components\\LoggedInUser\\LoggedInUser.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\UserInfo\\UserInfo.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\LoggedOutUser\\LoggedOutUser.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\EditProfile\\EditProfile.jsx",["93"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button } from 'antd';\nimport isEmail from 'validator/es/lib/isEmail';\nimport isURL from 'validator/es/lib/isURL';\nimport FormInput from '../FormInput/FormInput';\nimport classes from './EditProfile.module.scss';\n\nconst EditProfile = () => {\n  const { register, handleSubmit, watch, errors } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  const usernameSettingsValidation = register({\n    required: 'Username is required',\n    minLength: { value: 3, message: 'Your username needs to be at least 3 characters.' },\n    maxLength: { value: 20, message: 'Your username needs to be no more than 20 characters long.' },\n  });\n\n  const emailSettingsValidation = register({\n    required: 'Email is required',\n    validate: () => isEmail(watch('email')) || 'Invalid email format',\n  });\n\n  const passwordSettingsValidation = register({\n    minLength: { value: 8, message: 'Your password needs to be at least 8 characters.' },\n    maxLength: { value: 40, message: 'Your password needs to be no more than 40 characters long.' },\n  });\n\n  const urlSettingsValidation = register({\n    required: false,\n    validate: () => isURL(watch('avatar')) || 'Invalid url format',\n  });\n\n  return (\n    <div className={classes.Profile}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1 className={classes.Profile__Title}>Edit profile</h1>\n        <FormInput\n          ref={usernameSettingsValidation}\n          id=\"username\"\n          error={errors.username}\n          label=\"Username\"\n          type=\"text\"\n          name=\"username\"\n        />\n        <FormInput\n          ref={emailSettingsValidation}\n          id=\"email\"\n          error={errors.email}\n          label=\"Email Address\"\n          type=\"email\"\n          name=\"email\"\n        />\n        <FormInput\n          ref={passwordSettingsValidation}\n          id=\"newPassword\"\n          error={errors.newPassword}\n          label=\"New Password\"\n          type=\"password\"\n          name=\"newPassword\"\n        />\n        <FormInput\n          ref={urlSettingsValidation}\n          id=\"avatar\"\n          error={errors.avatar}\n          label=\"Avatar Image\"\n          type=\"url\"\n          name=\"avatar\"\n        />\n        <Button className={classes.Profile__Submit} type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditProfile;\n","D:\\Web\\Polina\\blog\\src\\components\\FormInput\\FormInput.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\ErrorIndicator\\ErrorIndicator.jsx",[],"D:\\Web\\Polina\\blog\\src\\store.js",[],"D:\\Web\\Polina\\blog\\src\\reducers\\rootReducer.js",[],"D:\\Web\\Polina\\blog\\src\\reducers\\setUserReducer.js",[],"D:\\Web\\Polina\\blog\\src\\actions\\actions.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":15,"column":5,"nodeType":"106","messageId":"107","endLine":15,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":15,"column":5,"nodeType":"106","messageId":"107","endLine":15,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":15,"column":5,"nodeType":"106","messageId":"107","endLine":15,"endColumn":16},"lines-around-directive",["108"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]