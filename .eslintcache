[{"D:\\Web\\Polina\\blog\\src\\index.js":"1","D:\\Web\\Polina\\blog\\src\\components\\App\\App.jsx":"2","D:\\Web\\Polina\\blog\\src\\components\\ArticlesList\\ArticlesList.jsx":"3","D:\\Web\\Polina\\blog\\src\\components\\Article\\Article.jsx":"4","D:\\Web\\Polina\\blog\\src\\services\\ArticlesService.js":"5","D:\\Web\\Polina\\blog\\src\\containers\\ArticlesListContainer\\ArticlesListContainer.jsx":"6","D:\\Web\\Polina\\blog\\src\\containers\\ArticlePage\\ArticlePage.jsx":"7","D:\\Web\\Polina\\blog\\src\\components\\Header\\Header.jsx":"8","D:\\Web\\Polina\\blog\\src\\components\\SignIn\\SignIn.jsx":"9","D:\\Web\\Polina\\blog\\src\\components\\SignUp\\SignUp.jsx":"10","D:\\Web\\Polina\\blog\\src\\components\\LoggedInUser\\LoggedInUser.jsx":"11","D:\\Web\\Polina\\blog\\src\\components\\UserInfo\\UserInfo.jsx":"12","D:\\Web\\Polina\\blog\\src\\components\\LoggedOutUser\\LoggedOutUser.jsx":"13","D:\\Web\\Polina\\blog\\src\\components\\EditProfile\\EditProfile.jsx":"14","D:\\Web\\Polina\\blog\\src\\components\\FormInput\\FormInput.jsx":"15","D:\\Web\\Polina\\blog\\src\\components\\ErrorIndicator\\ErrorIndicator.jsx":"16","D:\\Web\\Polina\\blog\\src\\store.js":"17","D:\\Web\\Polina\\blog\\src\\reducers\\rootReducer.js":"18","D:\\Web\\Polina\\blog\\src\\reducers\\setUserReducer.js":"19","D:\\Web\\Polina\\blog\\src\\actions\\actions.js":"20","D:\\Web\\Polina\\blog\\src\\components\\NewArticle\\NewArticle.jsx":"21","D:\\Web\\Polina\\blog\\src\\components\\NewArticleForm\\NewArticleForm.jsx":"22","D:\\Web\\Polina\\blog\\src\\components\\TagList\\TagList.jsx":"23","D:\\Web\\Polina\\blog\\src\\components\\TagForm\\TagForm.jsx":"24","D:\\Web\\Polina\\blog\\src\\components\\PrivateRoute\\PrivateRoute.jsx":"25","D:\\Web\\Polina\\blog\\src\\components\\EditArticle\\EditArticle.jsx":"26","D:\\Web\\Polina\\blog\\src\\utils\\addTagDeleteTag.js":"27","D:\\Web\\Polina\\blog\\src\\containers\\ArticleWrapper\\ArticleWrapper.jsx":"28"},{"size":303,"mtime":1612274017845,"results":"29","hashOfConfig":"30"},{"size":1526,"mtime":1613110223317,"results":"31","hashOfConfig":"30"},{"size":541,"mtime":1613374883829,"results":"32","hashOfConfig":"30"},{"size":4310,"mtime":1613374718594,"results":"33","hashOfConfig":"30"},{"size":3682,"mtime":1613130610184,"results":"34","hashOfConfig":"30"},{"size":1754,"mtime":1613135379103,"results":"35","hashOfConfig":"30"},{"size":1224,"mtime":1613374874102,"results":"36","hashOfConfig":"30"},{"size":1382,"mtime":1612765955726,"results":"37","hashOfConfig":"30"},{"size":3109,"mtime":1612524185481,"results":"38","hashOfConfig":"30"},{"size":4659,"mtime":1612765955874,"results":"39","hashOfConfig":"30"},{"size":1287,"mtime":1612765955765,"results":"40","hashOfConfig":"30"},{"size":847,"mtime":1612525807463,"results":"41","hashOfConfig":"30"},{"size":412,"mtime":1611846320572,"results":"42","hashOfConfig":"30"},{"size":3748,"mtime":1612765955639,"results":"43","hashOfConfig":"30"},{"size":949,"mtime":1612430666627,"results":"44","hashOfConfig":"30"},{"size":408,"mtime":1612418966635,"results":"45","hashOfConfig":"30"},{"size":311,"mtime":1612274017941,"results":"46","hashOfConfig":"30"},{"size":188,"mtime":1612274017881,"results":"47","hashOfConfig":"30"},{"size":284,"mtime":1612511052134,"results":"48","hashOfConfig":"30"},{"size":109,"mtime":1612274017370,"results":"49","hashOfConfig":"30"},{"size":1346,"mtime":1613051541035,"results":"50","hashOfConfig":"30"},{"size":1992,"mtime":1613052543628,"results":"51","hashOfConfig":"30"},{"size":845,"mtime":1613052543813,"results":"52","hashOfConfig":"30"},{"size":1011,"mtime":1613026105629,"results":"53","hashOfConfig":"30"},{"size":429,"mtime":1612879667245,"results":"54","hashOfConfig":"30"},{"size":2310,"mtime":1613052543397,"results":"55","hashOfConfig":"30"},{"size":255,"mtime":1613052543971,"results":"56","hashOfConfig":"30"},{"size":1585,"mtime":1613374973582,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1n7pgu5",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Web\\Polina\\blog\\src\\index.js",[],["121","122","123","124","125"],"D:\\Web\\Polina\\blog\\src\\components\\App\\App.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\ArticlesList\\ArticlesList.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\Article\\Article.jsx",["126"],"D:\\Web\\Polina\\blog\\src\\services\\ArticlesService.js",[],"D:\\Web\\Polina\\blog\\src\\containers\\ArticlesListContainer\\ArticlesListContainer.jsx",[],"D:\\Web\\Polina\\blog\\src\\containers\\ArticlePage\\ArticlePage.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\Header\\Header.jsx",["127"],"import React, { useEffect, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport LoggedInUser from '../LoggedInUser/LoggedInUser';\nimport LoggedOutUser from '../LoggedOutUser/LoggedOutUser';\nimport ArticlesService from '../../services/ArticlesService';\nimport { setUser } from '../../actions/actions';\nimport classes from './Header.module.scss';\n\nconst Header = (props) => {\n  const articlesService = useMemo(() => new ArticlesService(), []);\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      articlesService\n        .getCurrentUser()\n        .then((body) => {\n          props.setUser(body.user);\n        })\n        .catch((err) => console.log(err));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <header className={classes.Header}>\n      <h1 className={classes.Header__Title}>\n        <Link className={classes.Header__TitleLink} to=\"/\">\n          Realword Blog\n        </Link>\n      </h1>\n      {localStorage.getItem('token') ? <LoggedInUser /> : <LoggedOutUser />}\n    </header>\n  );\n};\nconst mapStateToProps = ({ userData: { user } }) => ({ user });\nconst mapDispatchToProps = { setUser };\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\nHeader.propTypes = {\n  setUser: PropTypes.func.isRequired,\n};\n","D:\\Web\\Polina\\blog\\src\\components\\SignIn\\SignIn.jsx",["128"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport isEmail from 'validator/es/lib/isEmail';\nimport FormInput from '../FormInput/FormInput';\nimport ArticlesService from '../../services/ArticlesService';\nimport { setUser } from '../../actions/actions';\nimport classes from './SignIn.module.scss';\nimport ErrorIndicator from '../ErrorIndicator/ErrorIndicator';\n\nconst SignIn = (props) => {\n  const [serverErrors, setServerErrors] = useState({\n    'email or password': null,\n  });\n\n  const articlesService = new ArticlesService();\n  const { register, handleSubmit, watch, errors } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = ({ email, password }) => {\n    const requestBody = {\n      user: {\n        email,\n        password,\n      },\n    };\n    articlesService\n      .logInUser(requestBody)\n      .then((body) => {\n        if (body.errors) {\n          setServerErrors(body.errors);\n          return;\n        }\n        localStorage.setItem('token', body.user.token);\n        props.setUser(body.user);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  if (localStorage.getItem('token')) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const emailSettingsValidation = register({\n    required: 'Email is required',\n    validate: () => isEmail(watch('email')) || 'Invalid email format',\n  });\n\n  const passwordSettingsValidation = register({\n    required: 'Password is required',\n    minLength: { value: 8, message: 'Your password needs to be at least 8 characters.' },\n    maxLength: { value: 40, message: 'Your password needs to be no more than 40 characters long.' },\n  });\n\n  return (\n    <div className={classes.SignIn}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1 className={classes.SignIn__Title}>Sign In</h1>\n        <FormInput\n          ref={emailSettingsValidation}\n          id=\"email\"\n          error={errors.email}\n          label=\"Email Address\"\n          type=\"email\"\n          name=\"email\"\n          serverErrors={serverErrors}\n        />\n\n        <FormInput\n          ref={passwordSettingsValidation}\n          id=\"password\"\n          error={errors.password}\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          serverErrors={serverErrors}\n        />\n        {serverErrors['email or password'] && (\n          <ErrorIndicator errorMessage={`Email or password ${serverErrors['email or password']}`} />\n        )}\n        <Button className={classes.SignIn__Submit} type=\"primary\" htmlType=\"submit\">\n          Login\n        </Button>\n      </form>\n\n      <p className={classes.SignIn__Question}>\n        Don&apos;t you have an account? <Link to=\"/sign-up\">Sign Up.</Link>\n      </p>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ userData: { user } }) => ({ user });\nconst mapDispatchToProps = { setUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n\nSignIn.propTypes = {\n  setUser: PropTypes.func.isRequired,\n};\n","D:\\Web\\Polina\\blog\\src\\components\\SignUp\\SignUp.jsx",["129"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Button } from 'antd';\nimport isEmail from 'validator/es/lib/isEmail';\nimport FormInput from '../FormInput/FormInput';\nimport ArticlesService from '../../services/ArticlesService';\nimport { setUser } from '../../actions/actions';\nimport classes from './SignUp.module.scss';\n\nconst SignUp = (props) => {\n  const articlesService = new ArticlesService();\n  const [serverErrors, setServerErrors] = useState({\n    username: null,\n    email: null,\n    password: null,\n  });\n  const { register, handleSubmit, watch, errors } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = ({ username, email, password }) => {\n    const requestBody = {\n      user: {\n        username,\n        email,\n        password,\n      },\n    };\n\n    articlesService\n      .registerUser(requestBody)\n      .then((body) => {\n        if (body.errors) {\n          setServerErrors(body.errors);\n          return;\n        }\n        localStorage.setItem('token', body.user.token);\n        props.setUser(body.user);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  if (localStorage.getItem('token')) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const passwordValue = watch('password', '');\n\n  const usernameSettingsValidation = register({\n    required: 'Username is required',\n    minLength: { value: 3, message: 'Your username needs to be at least 3 characters.' },\n    maxLength: { value: 20, message: 'Your username needs to be no more than 20 characters long.' },\n  });\n\n  const emailSettingsValidation = register({\n    required: 'Email is required',\n    validate: () => isEmail(watch('email')) || 'Invalid email format',\n  });\n\n  const passwordSettingsValidation = register({\n    required: 'Password is required',\n    minLength: { value: 8, message: 'Your password needs to be at least 8 characters.' },\n    maxLength: { value: 40, message: 'Your password needs to be no more than 40 characters long.' },\n  });\n\n  const passwordRepeatSettingsValidation = register({\n    required: 'Password is required',\n    validate: (value) => value === passwordValue || 'Passwords must match',\n  });\n\n  const agreementSettingsValidation = register({\n    required: 'Please accept the terms and conditions to continue',\n  });\n\n  return (\n    <div className={classes.SignUp}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1 className={classes.SignUp__Title}>Create new account</h1>\n\n        <FormInput\n          ref={usernameSettingsValidation}\n          id=\"username\"\n          error={errors.username}\n          label=\"Username\"\n          type=\"text\"\n          name=\"username\"\n          serverErrors={serverErrors}\n        />\n\n        <FormInput\n          ref={emailSettingsValidation}\n          id=\"email\"\n          error={errors.email}\n          label=\"Email Address\"\n          type=\"email\"\n          name=\"email\"\n          serverErrors={serverErrors}\n        />\n\n        <FormInput\n          ref={passwordSettingsValidation}\n          id=\"password\"\n          error={errors.password}\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          serverErrors={serverErrors}\n        />\n\n        <FormInput\n          ref={passwordRepeatSettingsValidation}\n          id=\"passwordRepeat\"\n          error={errors.passwordRepeat}\n          label=\"Repeat Password\"\n          type=\"password\"\n          name=\"passwordRepeat\"\n          serverErrors={serverErrors}\n        />\n\n        <div className={classes.SignUp__Agreement}>\n          <label htmlFor=\"checkbox\" className={classes.SignUp__Label}>\n            <input\n              className={classes.SignUp__Checkbox}\n              id=\"checkbox\"\n              name=\"checkbox\"\n              type=\"checkbox\"\n              ref={agreementSettingsValidation}\n            />\n            I agree to the processing of my personal information\n          </label>\n          {errors.checkbox && <p style={{ margin: 0, color: '#f5222d' }}>{errors.checkbox.message}</p>}\n        </div>\n\n        <Button className={classes.SignUp__Submit} type=\"primary\" htmlType=\"submit\">\n          Create\n        </Button>\n        <p className={classes.SignUp__Question}>\n          Already have an account? <Link to=\"/sign-in\">Sign In.</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ userData: { user } }) => ({ user });\nconst mapDispatchToProps = { setUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n\nSignUp.propTypes = {\n  setUser: PropTypes.func.isRequired,\n};\n","D:\\Web\\Polina\\blog\\src\\components\\LoggedInUser\\LoggedInUser.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\UserInfo\\UserInfo.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\LoggedOutUser\\LoggedOutUser.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\EditProfile\\EditProfile.jsx",["130"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Button } from 'antd';\nimport isEmail from 'validator/es/lib/isEmail';\nimport isURL from 'validator/es/lib/isURL';\nimport ArticlesService from '../../services/ArticlesService';\nimport { setUser } from '../../actions/actions';\nimport FormInput from '../FormInput/FormInput';\nimport DefaultUserAvatar from '../../img/DefaultUserAvatar.svg';\nimport classes from './EditProfile.module.scss';\n\nconst EditProfile = (props) => {\n  const articlesService = new ArticlesService();\n  const history = useHistory();\n  const { register, handleSubmit, watch, errors, setValue } = useForm({\n    mode: 'onChange',\n  });\n\n  useEffect(() => {\n    const { user } = props;\n    if (user) {\n      setValue('username', `${user.username}`);\n      setValue('email', `${user.email}`);\n      setValue('image', `${user.image ?? DefaultUserAvatar}`);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  const onSubmit = ({ username, email, password, image }) => {\n    const requestBody = {\n      user: { username, email, password, image },\n    };\n    articlesService\n      .updateUser(requestBody)\n      .then(({ user }) => {\n        props.setUser(user);\n        history.push('/');\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const usernameSettingsValidation = register({\n    required: 'Username is required',\n    minLength: { value: 3, message: 'Your username needs to be at least 3 characters.' },\n    maxLength: { value: 20, message: 'Your username needs to be no more than 20 characters long.' },\n  });\n\n  const emailSettingsValidation = register({\n    required: 'Email is required',\n    validate: () => isEmail(watch('email')) || 'Invalid email format',\n  });\n\n  const passwordSettingsValidation = register({\n    minLength: { value: 8, message: 'Your password needs to be at least 8 characters.' },\n    maxLength: { value: 40, message: 'Your password needs to be no more than 40 characters long.' },\n  });\n\n  const urlSettingsValidation = register({\n    required: false,\n    validate: () => isURL(watch('image')) || 'Invalid url format',\n  });\n\n  return (\n    <div className={classes.Profile}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1 className={classes.Profile__Title}>Edit profile</h1>\n        <FormInput\n          ref={usernameSettingsValidation}\n          id=\"username\"\n          error={errors.username}\n          label=\"Username\"\n          type=\"text\"\n          name=\"username\"\n        />\n        <FormInput\n          ref={emailSettingsValidation}\n          id=\"email\"\n          error={errors.email}\n          label=\"Email Address\"\n          type=\"email\"\n          name=\"email\"\n        />\n        <FormInput\n          ref={passwordSettingsValidation}\n          id=\"newPassword\"\n          error={errors.newPassword}\n          label=\"New Password\"\n          type=\"password\"\n          name=\"newPassword\"\n        />\n        <FormInput\n          ref={urlSettingsValidation}\n          id=\"image\"\n          error={errors.image}\n          label=\"Avatar Image\"\n          type=\"url\"\n          name=\"image\"\n        />\n        <Button className={classes.Profile__Submit} type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ userData: { user } }) => ({ user });\nconst mapDispatchToProps = { setUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\nEditProfile.defaultProps = {\n  user: {},\n};\n\nEditProfile.propTypes = {\n  user: PropTypes.instanceOf(Object),\n  setUser: PropTypes.func.isRequired,\n};\n","D:\\Web\\Polina\\blog\\src\\components\\FormInput\\FormInput.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\ErrorIndicator\\ErrorIndicator.jsx",[],"D:\\Web\\Polina\\blog\\src\\store.js",[],"D:\\Web\\Polina\\blog\\src\\reducers\\rootReducer.js",[],"D:\\Web\\Polina\\blog\\src\\reducers\\setUserReducer.js",[],"D:\\Web\\Polina\\blog\\src\\actions\\actions.js",[],"D:\\Web\\Polina\\blog\\src\\components\\NewArticle\\NewArticle.jsx",["131"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport NewArticleForm from '../NewArticleForm/NewArticleForm';\nimport TagForm from '../TagForm/TagForm';\nimport TagList from '../TagList/TagList';\nimport ArticlesService from '../../services/ArticlesService';\nimport classes from './NewArticle.module.scss';\nimport { addTag, deleteTag } from '../../utils/addTagDeleteTag';\n\nconst NewArticle = () => {\n  const articlesService = new ArticlesService();\n  const history = useHistory();\n  const [tags, setTags] = useState([]);\n\n  const submitArticle = ({ title, description, body }) => {\n    const tagList = tags.map((tag) => tag.name);\n    const requestBody = {\n      article: {\n        title,\n        description,\n        body,\n        tagList,\n      },\n    };\n\n    articlesService\n      .createArticle(requestBody)\n      .then(({ article: { slug } }) => history.push(`/articles/${slug}`))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className={classes.NewArticle}>\n      <h2 className={classes.NewArticle__Title}>Create new article</h2>\n      <NewArticleForm onSubmitArticle={submitArticle} />\n      <TagList tags={tags} onDeleteTag={(tag) => deleteTag(tags, tag, setTags)} />\n      <TagForm onAddTag={(tag) => addTag(tags, tag, setTags)} />\n    </div>\n  );\n};\nexport default NewArticle;\n","D:\\Web\\Polina\\blog\\src\\components\\NewArticleForm\\NewArticleForm.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\TagList\\TagList.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\TagForm\\TagForm.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\PrivateRoute\\PrivateRoute.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\EditArticle\\EditArticle.jsx",["132"],"import { Alert, Spin } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport ArticlesService from '../../services/ArticlesService';\nimport TagForm from '../TagForm/TagForm';\nimport NewArticleForm from '../NewArticleForm/NewArticleForm';\nimport TagList from '../TagList/TagList';\nimport { addTag, deleteTag } from '../../utils/addTagDeleteTag';\nimport classes from '../NewArticle/NewArticle.module.scss';\nimport cls from './EditArticle.module.scss';\n\nconst EditArticle = () => {\n  const [item, setArticle] = useState(null);\n  const [hasError, setError] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [tags, setTags] = useState([]);\n  const articlesService = new ArticlesService();\n  const history = useHistory();\n  const { slug } = useParams();\n\n  useEffect(() => {\n    articlesService\n      .getArticle(slug)\n      .then(({ article }) => {\n        setLoading(false);\n        setArticle(article);\n        setTags(article.tagList.map((tag) => ({ name: tag, id: `${tag}${Math.random()}` })));\n      })\n      .catch(() => {\n        setLoading(false);\n        setError(true);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [slug]);\n\n  const submitArticle = ({ title, description, body }) => {\n    const tagList = tags.map((tag) => tag.name);\n    const requestBody = {\n      article: {\n        title,\n        description,\n        body,\n        tagList,\n      },\n    };\n    articlesService\n      .updateArticle(requestBody, slug)\n      .then(({ article }) => {\n        history.push(`/articles/${article.slug}`);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  if (hasError) {\n    return <Alert message=\"Error\" description=\"Couldn't find the article\" type=\"error\" showIcon />;\n  }\n\n  if (isLoading) {\n    return <Spin className={cls.Spin} size=\"large\" tip=\"Loading...\" />;\n  }\n\n  return (\n    <div className={classes.NewArticle}>\n      <h2 className={classes.NewArticle__Title}>Edit Article</h2>\n      {item && <NewArticleForm onSubmitArticle={submitArticle} article={item} />}\n      <TagList tags={tags} onDeleteTag={(tag) => deleteTag(tags, tag, setTags)} />\n      <TagForm onAddTag={(tag) => addTag(tags, tag, setTags)} />\n    </div>\n  );\n};\n\nexport default EditArticle;\n","D:\\Web\\Polina\\blog\\src\\utils\\addTagDeleteTag.js",[],"D:\\Web\\Polina\\blog\\src\\containers\\ArticleWrapper\\ArticleWrapper.jsx",["133","134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":34,"column":25,"nodeType":"147","messageId":"148","endLine":34,"endColumn":36},{"ruleId":"145","severity":1,"message":"146","line":20,"column":25,"nodeType":"147","messageId":"148","endLine":20,"endColumn":36},{"ruleId":"145","severity":1,"message":"146","line":41,"column":23,"nodeType":"147","messageId":"148","endLine":41,"endColumn":34},{"ruleId":"145","severity":1,"message":"146","line":43,"column":23,"nodeType":"147","messageId":"148","endLine":43,"endColumn":34},{"ruleId":"145","severity":1,"message":"146","line":42,"column":23,"nodeType":"147","messageId":"148","endLine":42,"endColumn":34},{"ruleId":"145","severity":1,"message":"146","line":29,"column":23,"nodeType":"147","messageId":"148","endLine":29,"endColumn":34},{"ruleId":"145","severity":1,"message":"146","line":50,"column":23,"nodeType":"147","messageId":"148","endLine":50,"endColumn":34},{"ruleId":"145","severity":1,"message":"146","line":21,"column":23,"nodeType":"147","messageId":"148","endLine":21,"endColumn":34},{"ruleId":"145","severity":1,"message":"146","line":33,"column":23,"nodeType":"147","messageId":"148","endLine":33,"endColumn":34},"lines-around-directive",["149"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]