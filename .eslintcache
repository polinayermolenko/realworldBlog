[{"D:\\Web\\Polina\\blog\\src\\index.js":"1","D:\\Web\\Polina\\blog\\src\\components\\App\\App.jsx":"2","D:\\Web\\Polina\\blog\\src\\components\\ArticlesList\\ArticlesList.jsx":"3","D:\\Web\\Polina\\blog\\src\\components\\Article\\Article.jsx":"4","D:\\Web\\Polina\\blog\\src\\services\\ArticlesService.js":"5","D:\\Web\\Polina\\blog\\src\\containers\\ArticlesListContainer\\ArticlesListContainer.jsx":"6","D:\\Web\\Polina\\blog\\src\\containers\\ArticlePage\\ArticlePage.jsx":"7","D:\\Web\\Polina\\blog\\src\\components\\Header\\Header.jsx":"8","D:\\Web\\Polina\\blog\\src\\components\\SignIn\\SignIn.jsx":"9","D:\\Web\\Polina\\blog\\src\\components\\SignUp\\SignUp.jsx":"10","D:\\Web\\Polina\\blog\\src\\components\\LoggedInUser\\LoggedInUser.jsx":"11","D:\\Web\\Polina\\blog\\src\\components\\UserInfo\\UserInfo.jsx":"12","D:\\Web\\Polina\\blog\\src\\components\\LoggedOutUser\\LoggedOutUser.jsx":"13","D:\\Web\\Polina\\blog\\src\\components\\EditProfile\\EditProfile.jsx":"14","D:\\Web\\Polina\\blog\\src\\components\\FormInput\\FormInput.jsx":"15","D:\\Web\\Polina\\blog\\src\\components\\ErrorIndicator\\ErrorIndicator.jsx":"16","D:\\Web\\Polina\\blog\\src\\store.js":"17","D:\\Web\\Polina\\blog\\src\\reducers\\rootReducer.js":"18","D:\\Web\\Polina\\blog\\src\\reducers\\setUserReducer.js":"19","D:\\Web\\Polina\\blog\\src\\actions\\actions.js":"20"},{"size":303,"mtime":1612274017845,"results":"21","hashOfConfig":"22"},{"size":1079,"mtime":1612261659145,"results":"23","hashOfConfig":"22"},{"size":499,"mtime":1611734407127,"results":"24","hashOfConfig":"22"},{"size":1915,"mtime":1612430666506,"results":"25","hashOfConfig":"22"},{"size":1513,"mtime":1612447457049,"results":"26","hashOfConfig":"22"},{"size":1754,"mtime":1611757704883,"results":"27","hashOfConfig":"22"},{"size":1170,"mtime":1612261879301,"results":"28","hashOfConfig":"22"},{"size":1468,"mtime":1612450477514,"results":"29","hashOfConfig":"22"},{"size":3110,"mtime":1612447950091,"results":"30","hashOfConfig":"22"},{"size":4684,"mtime":1612430666786,"results":"31","hashOfConfig":"22"},{"size":1019,"mtime":1612451651430,"results":"32","hashOfConfig":"22"},{"size":858,"mtime":1612449903264,"results":"33","hashOfConfig":"22"},{"size":412,"mtime":1611846320572,"results":"34","hashOfConfig":"22"},{"size":2466,"mtime":1612254900484,"results":"35","hashOfConfig":"22"},{"size":949,"mtime":1612430666627,"results":"36","hashOfConfig":"22"},{"size":408,"mtime":1612418966635,"results":"37","hashOfConfig":"22"},{"size":311,"mtime":1612274017941,"results":"38","hashOfConfig":"22"},{"size":188,"mtime":1612274017881,"results":"39","hashOfConfig":"22"},{"size":284,"mtime":1612274017896,"results":"40","hashOfConfig":"22"},{"size":109,"mtime":1612274017370,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1n7pgu5",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Web\\Polina\\blog\\src\\index.js",[],["86","87","88","89","90"],"D:\\Web\\Polina\\blog\\src\\components\\App\\App.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\ArticlesList\\ArticlesList.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\Article\\Article.jsx",[],"D:\\Web\\Polina\\blog\\src\\services\\ArticlesService.js",[],"D:\\Web\\Polina\\blog\\src\\containers\\ArticlesListContainer\\ArticlesListContainer.jsx",[],"D:\\Web\\Polina\\blog\\src\\containers\\ArticlePage\\ArticlePage.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\Header\\Header.jsx",["91"],"D:\\Web\\Polina\\blog\\src\\components\\SignIn\\SignIn.jsx",["92"],"D:\\Web\\Polina\\blog\\src\\components\\SignUp\\SignUp.jsx",["93"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Button } from 'antd';\nimport isEmail from 'validator/es/lib/isEmail';\nimport FormInput from '../FormInput/FormInput';\nimport ArticlesService from '../../services/ArticlesService';\nimport { setUser } from '../../actions/actions';\nimport classes from './SignUp.module.scss';\n\nconst SignUp = (props) => {\n  const history = useHistory();\n  const articlesService = new ArticlesService();\n  const [serverErrors, setServerErrors] = useState({\n    username: null,\n    email: null,\n    password: null,\n  });\n  const { register, handleSubmit, watch, errors } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = ({ username, email, password }) => {\n    const requestBody = {\n      user: {\n        username,\n        email,\n        password,\n      },\n    };\n\n    articlesService\n      .registerUser(requestBody)\n      .then((body) => {\n        if (body.errors) {\n          setServerErrors(body.errors);\n          return;\n        }\n        props.setUser(body.user);\n        localStorage.setItem('token', body.user.token);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  if (localStorage.getItem('token')) {\n    history.push('/');\n  }\n\n  const passwordValue = watch('password', '');\n\n  const usernameSettingsValidation = register({\n    required: 'Username is required',\n    minLength: { value: 3, message: 'Your username needs to be at least 3 characters.' },\n    maxLength: { value: 20, message: 'Your username needs to be no more than 20 characters long.' },\n  });\n\n  const emailSettingsValidation = register({\n    required: 'Email is required',\n    validate: () => isEmail(watch('email')) || 'Invalid email format',\n  });\n\n  const passwordSettingsValidation = register({\n    required: 'Password is required',\n    minLength: { value: 8, message: 'Your password needs to be at least 8 characters.' },\n    maxLength: { value: 40, message: 'Your password needs to be no more than 40 characters long.' },\n  });\n\n  const passwordRepeatSettingsValidation = register({\n    required: 'Password is required',\n    validate: (value) => value === passwordValue || 'Passwords must match',\n  });\n\n  const agreementSettingsValidation = register({\n    required: 'Please accept the terms and conditions to continue',\n  });\n\n  return (\n    <div className={classes.SignUp}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1 className={classes.SignUp__Title}>Create new account</h1>\n\n        <FormInput\n          ref={usernameSettingsValidation}\n          id=\"username\"\n          error={errors.username}\n          label=\"Username\"\n          type=\"text\"\n          name=\"username\"\n          serverErrors={serverErrors}\n        />\n\n        <FormInput\n          ref={emailSettingsValidation}\n          id=\"email\"\n          error={errors.email}\n          label=\"Email Address\"\n          type=\"email\"\n          name=\"email\"\n          serverErrors={serverErrors}\n        />\n\n        <FormInput\n          ref={passwordSettingsValidation}\n          id=\"password\"\n          error={errors.password}\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          serverErrors={serverErrors}\n        />\n\n        <FormInput\n          ref={passwordRepeatSettingsValidation}\n          id=\"passwordRepeat\"\n          error={errors.passwordRepeat}\n          label=\"Repeat Password\"\n          type=\"password\"\n          name=\"passwordRepeat\"\n          serverErrors={serverErrors}\n        />\n\n        <div className={classes.SignUp__Agreement}>\n          <label htmlFor=\"checkbox\" className={classes.SignUp__Label}>\n            <input\n              className={classes.SignUp__Checkbox}\n              id=\"checkbox\"\n              name=\"checkbox\"\n              type=\"checkbox\"\n              ref={agreementSettingsValidation}\n            />\n            I agree to the processing of my personal information\n          </label>\n          {errors.checkbox && <p style={{ margin: 0, color: '#f5222d' }}>{errors.checkbox.message}</p>}\n        </div>\n\n        <Button className={classes.SignUp__Submit} type=\"primary\" htmlType=\"submit\">\n          Create\n        </Button>\n        <p className={classes.SignUp__Question}>\n          Already have an account? <Link to=\"/sign-in\">Sign In.</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ userData: { user } }) => ({ user });\nconst mapDispatchToProps = { setUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n\nSignUp.propTypes = {\n  setUser: PropTypes.func.isRequired,\n};\n","D:\\Web\\Polina\\blog\\src\\components\\LoggedInUser\\LoggedInUser.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\UserInfo\\UserInfo.jsx",["94"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classes from '../Header/Header.module.scss';\nimport DefaultUserAvatar from '../../img/DefaultUserAvatar.svg';\n\nconst UserInfo = (props) => {\n   console.log(props)\n   const {user: {username, image}} = props;\n  return (\n \n    <Link className={classes.Header__UserInfo} to=\"/profile\">\n      <span className={classes.Header__Username}>{username}</span>\n      <img className={classes.Header__Avatar} src={image ?? DefaultUserAvatar} width=\"46\" height=\"46\" alt=\"Avatar\" />\n    </Link>\n  )};\n\n  const mapStateToProps = ({ userData: { user } }) => ({ user });\n\nexport default connect(mapStateToProps)(UserInfo);\n\nUserInfo.defaultProps = {\n user: {}\n};\n\nUserInfo.propTypes = {\n  user: PropTypes.instanceOf(Object)\n};\n","D:\\Web\\Polina\\blog\\src\\components\\LoggedOutUser\\LoggedOutUser.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\EditProfile\\EditProfile.jsx",["95"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button } from 'antd';\nimport isEmail from 'validator/es/lib/isEmail';\nimport isURL from 'validator/es/lib/isURL';\nimport FormInput from '../FormInput/FormInput';\nimport classes from './EditProfile.module.scss';\n\nconst EditProfile = () => {\n  const { register, handleSubmit, watch, errors } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  const usernameSettingsValidation = register({\n    required: 'Username is required',\n    minLength: { value: 3, message: 'Your username needs to be at least 3 characters.' },\n    maxLength: { value: 20, message: 'Your username needs to be no more than 20 characters long.' },\n  });\n\n  const emailSettingsValidation = register({\n    required: 'Email is required',\n    validate: () => isEmail(watch('email')) || 'Invalid email format',\n  });\n\n  const passwordSettingsValidation = register({\n    minLength: { value: 8, message: 'Your password needs to be at least 8 characters.' },\n    maxLength: { value: 40, message: 'Your password needs to be no more than 40 characters long.' },\n  });\n\n  const urlSettingsValidation = register({\n    required: false,\n    validate: () => isURL(watch('avatar')) || 'Invalid url format',\n  });\n\n  return (\n    <div className={classes.Profile}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1 className={classes.Profile__Title}>Edit profile</h1>\n        <FormInput\n          ref={usernameSettingsValidation}\n          id=\"username\"\n          error={errors.username}\n          label=\"Username\"\n          type=\"text\"\n          name=\"username\"\n        />\n        <FormInput\n          ref={emailSettingsValidation}\n          id=\"email\"\n          error={errors.email}\n          label=\"Email Address\"\n          type=\"email\"\n          name=\"email\"\n        />\n        <FormInput\n          ref={passwordSettingsValidation}\n          id=\"newPassword\"\n          error={errors.newPassword}\n          label=\"New Password\"\n          type=\"password\"\n          name=\"newPassword\"\n        />\n        <FormInput\n          ref={urlSettingsValidation}\n          id=\"avatar\"\n          error={errors.avatar}\n          label=\"Avatar Image\"\n          type=\"url\"\n          name=\"avatar\"\n        />\n        <Button className={classes.Profile__Submit} type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditProfile;\n","D:\\Web\\Polina\\blog\\src\\components\\FormInput\\FormInput.jsx",[],"D:\\Web\\Polina\\blog\\src\\components\\ErrorIndicator\\ErrorIndicator.jsx",[],"D:\\Web\\Polina\\blog\\src\\store.js",[],"D:\\Web\\Polina\\blog\\src\\reducers\\rootReducer.js",[],"D:\\Web\\Polina\\blog\\src\\reducers\\setUserReducer.js",[],"D:\\Web\\Polina\\blog\\src\\actions\\actions.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":21,"column":25,"nodeType":"108","messageId":"109","endLine":21,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":41,"column":23,"nodeType":"108","messageId":"109","endLine":41,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":42,"column":21,"nodeType":"108","messageId":"109","endLine":42,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":9,"column":4,"nodeType":"108","messageId":"109","endLine":9,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":15,"column":5,"nodeType":"108","messageId":"109","endLine":15,"endColumn":16},"lines-around-directive",["110"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]